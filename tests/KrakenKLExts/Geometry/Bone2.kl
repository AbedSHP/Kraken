require Geometry;

/////////////////////////////////////////////
// Bone
// draws a bone primitive as triangles given a transform, a length, a radius.
function PolygonMesh.drawBone2!(Xfo xfo, Scalar length, Scalar radius, Boolean setNormals) {

  Vec3 boneVec = Vec3(length, 0.0, 0.0);
  Vec3 yVec = Vec3(0.0, radius, 0.0);
  Vec3 zVec = Vec3(0.0, 0.0, radius);

  Size firstPoly = this.polygonCount();
  Size firstPoint = this.createPoints(6);
  Size pointId = firstPoint;

  Vec3 p0 = xfo.tr;
  Vec3 p1 = xfo.transformVector((boneVec * 0.2) + yVec + zVec);
  Vec3 p2 = xfo.transformVector((boneVec * 0.2) - yVec + zVec);
  Vec3 p3 = xfo.transformVector((boneVec * 0.2) - yVec - zVec);
  Vec3 p4 = xfo.transformVector((boneVec * 0.2) + yVec - zVec);
  Vec3 p5 = xfo.transformVector(boneVec);

  this.setPointPosition(pointId, p0); pointId++;
  this.setPointPosition(pointId, p1); pointId++;
  this.setPointPosition(pointId, p2); pointId++;
  this.setPointPosition(pointId, p3); pointId++;
  this.setPointPosition(pointId, p4); pointId++;
  this.setPointPosition(pointId, p5); pointId++;

  this.beginStructureChanges();
  this.addPolygon(firstPoint+2, firstPoint+1, firstPoint+0);
  this.addPolygon(firstPoint+3, firstPoint+2, firstPoint+0);
  this.addPolygon(firstPoint+4, firstPoint+3, firstPoint+0);
  this.addPolygon(firstPoint+1, firstPoint+4, firstPoint+0);
  this.addPolygon(firstPoint+1, firstPoint+2, firstPoint+5);
  this.addPolygon(firstPoint+2, firstPoint+3, firstPoint+5);
  this.addPolygon(firstPoint+3, firstPoint+4, firstPoint+5);
  this.addPolygon(firstPoint+4, firstPoint+1, firstPoint+5);
  this.endStructureChanges();

  if(setNormals){
    Ref<Vec3Attribute> normals = this.getOrCreateNormals();

    // Set Points Normals
    Vec3 normal;

    normal = (p2 - p0).cross(p1 - p0).unit();
    this.setPolygonAttribute(firstPoly+0, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+0, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+0, 2, normals, xfo.ori.rotateVector(normal));

    normal = (p3 - p0).cross(p2 - p0).unit();
    this.setPolygonAttribute(firstPoly+1, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+1, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+1, 2, normals, xfo.ori.rotateVector(normal));

    normal = (p4 - p0).cross(p3 - p0).unit();
    this.setPolygonAttribute(firstPoly+2, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+2, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+2, 2, normals, xfo.ori.rotateVector(normal));

    normal = (p1 - p0).cross(p4 - p0).unit();
    this.setPolygonAttribute(firstPoly+3, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+3, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+3, 2, normals, xfo.ori.rotateVector(normal));

    normal = (p1 - p5).cross(p2 - p5).unit();
    this.setPolygonAttribute(firstPoly+4, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+4, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+4, 2, normals, xfo.ori.rotateVector(normal));

    normal = (p2 - p5).cross(p3 - p5).unit();
    this.setPolygonAttribute(firstPoly+5, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+5, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+5, 2, normals, xfo.ori.rotateVector(normal));

    normal = (p3 - p5).cross(p4 - p5).unit();
    this.setPolygonAttribute(firstPoly+6, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+6, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+6, 2, normals, xfo.ori.rotateVector(normal));

    normal = (p4 - p5).cross(p1 - p5).unit();
    this.setPolygonAttribute(firstPoly+7, 0, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+7, 1, normals, xfo.ori.rotateVector(normal));
    this.setPolygonAttribute(firstPoly+7, 2, normals, xfo.ori.rotateVector(normal));
  }
}